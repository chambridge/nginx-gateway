load_module /usr/lib64/nginx/modules/ngx_http_perl_module.so;

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Use x-alt-req-id if passed otherwise generate one
    map $http_x_alt_req_id $x_rh_insights_request_id_value {
        default $request_id;
        ""      $request_id;
        ~.+     $http_x_alt_req_id;
    }
 
    perl_modules /etc/nginx/perl;
    perl_require identity.pl;
    perl_set $cert_template 'sub { open my $fh, "<", "/etc/nginx/perl/cert_identity.json" or return "{}"; local $/; my $json = <$fh>; close $fh; return $json; }';
    perl_set $jwt_template 'sub { open my $fh, "<", "/etc/nginx/perl/jwt_identity.json" or return "{}"; local $/; my $json = <$fh>; close $fh; return $json; }';
    perl_set $env_org_id 'sub { return $ENV{"ORG_ID"}; }';
    perl_set $identity identity::set_identity_header;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "x-rh-insights-request-id: $x_rh_insights_request_id_value" "upstream: $upstream_addr" "upstream_status: $upstream_status"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen unix:/sockets/nginx.sock;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;
        ssl_client_certificate /etc/nginx/certs/ca.crt;
        ssl_verify_client on;
        ssl_verify_depth 1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization "";
        proxy_set_header x-rh-insights-request-id $x_rh_insights_request_id_value;
        proxy_set_header x-rh-identity $identity;

        location /api/insights {
            proxy_pass http://advisor-api:80;
        }
        location /r/insights/ {
            proxy_pass http://advisor-api:80;
        }

        location /apps {
            proxy_pass http://app:80;
        }
        location /r/api {
            proxy_pass http://app:80;
        }
        location /r/insights/platform {
            proxy_pass http://app:80;
        }

        location /api/inventory {
            proxy_pass http://inventory-api:80;
        }

        location /api/module-update-router/v1/channel {
            default_type application/json;
            return 200 '{"url": "/release"}';
        }

        location /r/insights/v1/static/release/ {
            root /usr/shar/nginx/html;
            try_files $uri $uri/ =404;
        }

    }


}
